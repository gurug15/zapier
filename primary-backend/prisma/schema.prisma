// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       Int     @default(autoincrement()) @id
  name     String
  email    String 
  password String
  zaps      Zap[]
}

model Zap {
  id           String   @default(uuid()) @id
  triggerId    String 
  trigger      Trigger?
  actions      Action[]
  zapRuns      ZapRun[]
  userId       Int   
  user         User   @relation(fields: [userId], references: [id])
}

model Trigger {
  id           String           @default(uuid()) @id
  zapId        String           @unique
  triggerId    String             
  type         AvalableTriggers @relation(fields: [triggerId], references: [id])
  zap          Zap              @relation(fields: [zapId], references: [id])
}

model Action {
  id           String          @default(uuid()) @id
  zap          Zap             @relation(fields: [zapId], references: [id])
  zapId        String
  type         AvalableActions @relation(fields: [actionId], references: [id])
  actionId     String
  sortingOrder Int              @default(0)
}

model AvalableActions {
  id           String @default(uuid()) @id
  name         String
  image        String?
  actoins      Action[]
}

model AvalableTriggers {
  id          String @default(uuid()) @id
  name        String
  image       String?
  triggers    Trigger[]
}

model ZapRun {
  id           String   @default(uuid()) @id
  zapId        String  
  metadata     Json
  zap          Zap      @relation(fields: [zapId], references: [id])
  zapRunOutbox ZapRunOutbox?
}

model ZapRunOutbox {
  id        String @default(uuid()) @id
  zapRunId  String @unique
  zapRun    ZapRun @relation(fields: [zapRunId], references: [id])
}